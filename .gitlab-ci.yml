# Copyright (c) 2021-2023 Arm Limited and Contributors. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

#
# Build and Test are done in two separate jobs in CI and will be run in
# different workers. Reasons for doing in two separate jobs are:
#
# * To allow some matrix to just build - The tests will be run for
#   different Cloud OS, Compiler matrix etc. We may need to allow some
#   matrix just to build.
#
# * To keep the CI scripts consistent - Tests using real hardware boards
#   are run in LAVA. LAVA nodes may not be powerful nor licensed to run
#   both build and test.
#
#
# Default workspace may not be the same for Kubernetes GitLab runners.
# Hence, build and test job may get executed in different directories
# ctest needs to have build artefacts in same directory path
# to find the tests. To get the workspace same, execute the jobs in
# a pre-defined workspace by setting the GIT_CLONE_PATH
#
default:
  # cancel the job if a new pipeline is triggered on the same branch
  interruptible: true

include:
  - project: '${OPEN_IOT_SDK_BASE_GROUP}/tools/developer-tools'
    ref: 1e0fb5dbc3ca75e3379944db42ba5148dfc11d87
    file:
      - '/templates/pipeline-baseline-sdk.yml'
      - '/templates/sync-public/pipeline-sync-public.yml'
      - '/templates/autobot/pipeline-autobot.yml'
  # for build job template
  - local: .gitlab/ci/pipeline/.job_templates.yml

variables:
  GIT_CLONE_PATH: /builds/workspace

workflow:
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_REF_NAME =~ /^release-.*/
    - if: $CI_COMMIT_REF_NAME == "main"
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_PIPELINE_SOURCE == "schedule"

stages:
  - autobot
  - quality-check
  - build-and-test
  - sync-public

autobot:
  stage: autobot
  image: ${OPEN_IOT_SDK_DOCKER_REGISTRY}/sanity:v1
  variables:
    AUTO_MERGE: "true"
  tags:
    - iotmsw-amd64
  extends:
    - .autobot
  rules:
    - if: $UPDATE_SDK_COMPONENTS == "true"

.cppcheck_options: &cppcheck_options
  CPPCHECK_OPTIONS: "--error-exitcode=1 --quiet --enable=style,performance,warning,portability --std=c99 --std=c++14 --inline-suppr --suppress=internalAstError --suppress=preprocessorErrorDirective --suppress=unmatchedSuppression --project=__build/compile_commands.json -i__build --suppress=*:__build/*"

unit-tests:
  extends: .base-job-rules
  tags:
    - iotmsw-amd64
  image: ${OPEN_IOT_SDK_DOCKER_REGISTRY}/sanity:v1
  stage: quality-check
  variables: *cppcheck_options
  script:
    - cmake -S . -B __build -GNinja -DENABLE_DEVELOPER_MODE=ON -DOPT_ENABLE_DOXYGEN=ON -DOPT_ENABLE_SANITIZER_LEAK=ON -DOPT_ENABLE_COVERAGE=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
    - cmake --build __build
    - ctest --test-dir __build --output-on-failure
    - cmake --build __build --target covreport
    - cppcheck ${CPPCHECK_OPTIONS}
  coverage: /^\s*lines:\s*\d+.\d+\%/
  artifacts:
    name: ${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}
    expire_in: 7 days
    reports:
      coverage_report:
        coverage_format: cobertura
        path: __build/coverage.xml
    paths:
      - __build/html/

build-test:
  tags:
    - iotmsw-amd64
  extends:
    - .build-and-test
    - .base-job-rules
  image: ${OPEN_IOT_SDK_DOCKER_REGISTRY}/open-iot-sdk:v1
  stage:
    build-and-test
  parallel:
    matrix:
      -
        TEST:
          - examples/aws-client
          - examples/azure-netxduo
          - examples/azure-netxduo-iot
          - examples/azure-sdk
          - examples/cmsis-lwip
          - examples/cmsis-rtos-api
          - examples/freertos-api
          - examples/littlefs
          - examples/mbedtls
          - examples/mbed-os-netsocket
          - examples/pigweed-chrono
          - examples/pigweed-log
          - examples/pigweed-sys-io
          - examples/pigweed-thread
          - examples/pigweed-rpc
          - examples/tf-m
          - examples/threadx-api
          - tests/arm-2d
          - tests/cmsis-sockets
          - tests/tf-m
          - tests/threadx-cmsis-rtos-mixed
          - tests/pigweed

  variables:
    <<: *cppcheck_options
    TEST: $TEST
    # PLATFORMS, and TOOLCHAINS are comma separated arguments
    PLATFORMS: corstone-300, corstone-310
    TOOLCHAINS: armclang, arm-none-eabi-gcc


# This is triggered when a commit is added to the DEFAULT(often `main`) branch in internal GitLab
# This job will push DEFAULT branch changes to the public GitLab
push-public:
  extends: .push-public
  stage: sync-public

# This job is triggered by scheduled pipeline of this repository running in internal GitLab.
# This job will pull changes of the branch which is set to run the scheduled pipeline (often `main` branch).
pull-public:
  extends: .pull-public
  stage: sync-public

upload-examples:
  image: ${OPEN_IOT_SDK_DOCKER_REGISTRY}/sanity:v1
  tags:
    - iotmsw-amd64
  stage: sync-public
  variables:
    UPLOAD_DESTINATION : 'https://${GITLAB_USER_ID}:${UPDATE_SDK_EXAMPLES}@${OPEN_IOT_SDK_BASE}/examples/sdk-examples.git'
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $SYNC_TO_PUBLIC == "true"
  script:
    - git clone ${UPLOAD_DESTINATION} sdk-examples
    - cmake -S templates -B tmp
    - rm -rf sdk-examples/examples
    - cp -r __codegen/examples sdk-examples/examples
    - cd sdk-examples
    - git add -A
    - git config --global user.email "auto-update-bot@git.gitlab.arm.com"
    - git config --global user.name "Auto-update bot"
    - git commit -m "Update examples to https://git.gitlab.arm.com/iot/open-iot-sdk/sdk/-/commit/${CI_COMMIT_SHORT_SHA}"
    - git push ${UPLOAD_DESTINATION} HEAD:${CI_DEFAULT_BRANCH}
